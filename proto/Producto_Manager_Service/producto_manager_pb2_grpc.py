# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import producto_manager_pb2 as producto__manager__pb2
import producto_service_pb2 as producto__service__pb2
import tienda_service_pb2 as tienda__service__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in producto_manager_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ProductoManagerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FindById = channel.unary_unary(
                '/ProductoManagerService/FindById',
                request_serializer=producto__manager__pb2.ProductoEnTienda.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductoEnTienda.FromString,
                _registered_method=True)
        self.FindAll = channel.unary_unary(
                '/ProductoManagerService/FindAll',
                request_serializer=producto__manager__pb2.ProductoManagerEmpty.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductosEnTienda.FromString,
                _registered_method=True)
        self.FindAllByProductoId = channel.unary_unary(
                '/ProductoManagerService/FindAllByProductoId',
                request_serializer=producto__service__pb2.Producto.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductosEnTienda.FromString,
                _registered_method=True)
        self.FindAllByTiendaId = channel.unary_unary(
                '/ProductoManagerService/FindAllByTiendaId',
                request_serializer=tienda__service__pb2.Tienda.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductosEnTienda.FromString,
                _registered_method=True)
        self.FindAllByCustomFilter = channel.unary_unary(
                '/ProductoManagerService/FindAllByCustomFilter',
                request_serializer=producto__manager__pb2.CustomFilter.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductosEnTienda.FromString,
                _registered_method=True)
        self.AssingProductoToTienda = channel.unary_unary(
                '/ProductoManagerService/AssingProductoToTienda',
                request_serializer=producto__manager__pb2.AssignToTiendaMessage.SerializeToString,
                response_deserializer=producto__manager__pb2.AssignResponse.FromString,
                _registered_method=True)
        self.AddProducto = channel.unary_unary(
                '/ProductoManagerService/AddProducto',
                request_serializer=producto__manager__pb2.ProductoBase.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductoEnTienda.FromString,
                _registered_method=True)
        self.ModifyProducto = channel.unary_unary(
                '/ProductoManagerService/ModifyProducto',
                request_serializer=producto__manager__pb2.ProductoBase.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductoEnTienda.FromString,
                _registered_method=True)
        self.ModifyStock = channel.unary_unary(
                '/ProductoManagerService/ModifyStock',
                request_serializer=producto__manager__pb2.ProductoEnTienda.SerializeToString,
                response_deserializer=producto__manager__pb2.ProductoEnTienda.FromString,
                _registered_method=True)


class ProductoManagerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FindById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindAllByProductoId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindAllByTiendaId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindAllByCustomFilter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssingProductoToTienda(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProducto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyProducto(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductoManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FindById': grpc.unary_unary_rpc_method_handler(
                    servicer.FindById,
                    request_deserializer=producto__manager__pb2.ProductoEnTienda.FromString,
                    response_serializer=producto__manager__pb2.ProductoEnTienda.SerializeToString,
            ),
            'FindAll': grpc.unary_unary_rpc_method_handler(
                    servicer.FindAll,
                    request_deserializer=producto__manager__pb2.ProductoManagerEmpty.FromString,
                    response_serializer=producto__manager__pb2.ProductosEnTienda.SerializeToString,
            ),
            'FindAllByProductoId': grpc.unary_unary_rpc_method_handler(
                    servicer.FindAllByProductoId,
                    request_deserializer=producto__service__pb2.Producto.FromString,
                    response_serializer=producto__manager__pb2.ProductosEnTienda.SerializeToString,
            ),
            'FindAllByTiendaId': grpc.unary_unary_rpc_method_handler(
                    servicer.FindAllByTiendaId,
                    request_deserializer=tienda__service__pb2.Tienda.FromString,
                    response_serializer=producto__manager__pb2.ProductosEnTienda.SerializeToString,
            ),
            'FindAllByCustomFilter': grpc.unary_unary_rpc_method_handler(
                    servicer.FindAllByCustomFilter,
                    request_deserializer=producto__manager__pb2.CustomFilter.FromString,
                    response_serializer=producto__manager__pb2.ProductosEnTienda.SerializeToString,
            ),
            'AssingProductoToTienda': grpc.unary_unary_rpc_method_handler(
                    servicer.AssingProductoToTienda,
                    request_deserializer=producto__manager__pb2.AssignToTiendaMessage.FromString,
                    response_serializer=producto__manager__pb2.AssignResponse.SerializeToString,
            ),
            'AddProducto': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProducto,
                    request_deserializer=producto__manager__pb2.ProductoBase.FromString,
                    response_serializer=producto__manager__pb2.ProductoEnTienda.SerializeToString,
            ),
            'ModifyProducto': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyProducto,
                    request_deserializer=producto__manager__pb2.ProductoBase.FromString,
                    response_serializer=producto__manager__pb2.ProductoEnTienda.SerializeToString,
            ),
            'ModifyStock': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyStock,
                    request_deserializer=producto__manager__pb2.ProductoEnTienda.FromString,
                    response_serializer=producto__manager__pb2.ProductoEnTienda.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProductoManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ProductoManagerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProductoManagerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FindById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/FindById',
            producto__manager__pb2.ProductoEnTienda.SerializeToString,
            producto__manager__pb2.ProductoEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/FindAll',
            producto__manager__pb2.ProductoManagerEmpty.SerializeToString,
            producto__manager__pb2.ProductosEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindAllByProductoId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/FindAllByProductoId',
            producto__service__pb2.Producto.SerializeToString,
            producto__manager__pb2.ProductosEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindAllByTiendaId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/FindAllByTiendaId',
            tienda__service__pb2.Tienda.SerializeToString,
            producto__manager__pb2.ProductosEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindAllByCustomFilter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/FindAllByCustomFilter',
            producto__manager__pb2.CustomFilter.SerializeToString,
            producto__manager__pb2.ProductosEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AssingProductoToTienda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/AssingProductoToTienda',
            producto__manager__pb2.AssignToTiendaMessage.SerializeToString,
            producto__manager__pb2.AssignResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddProducto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/AddProducto',
            producto__manager__pb2.ProductoBase.SerializeToString,
            producto__manager__pb2.ProductoEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModifyProducto(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/ModifyProducto',
            producto__manager__pb2.ProductoBase.SerializeToString,
            producto__manager__pb2.ProductoEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ModifyStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ProductoManagerService/ModifyStock',
            producto__manager__pb2.ProductoEnTienda.SerializeToString,
            producto__manager__pb2.ProductoEnTienda.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
